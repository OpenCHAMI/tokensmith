# Copyright Â© 2025 OpenCHAMI a Series of LF Projects, LLC
#
# SPDX-License-Identifier: MIT

services:
  step-ca:
    image: smallstep/step-ca:latest
    environment:
      - DOCKER_STEPCA_INIT_NON_INTERACTIVE=true
      - DOCKER_STEPCA_INIT_NAME=OpenCHAMI Test CA
      - DOCKER_STEPCA_INIT_DNS_NAMES=step-ca.openchami.demo,step-ca
      - DOCKER_STEPCA_INIT_ADDRESS=:9000
      - DOCKER_STEPCA_INIT_PROVISIONER=admin
      - DOCKER_STEPCA_INIT_PASSWORD=password
      - DOCKER_STEPCA_INIT_ACME=true
      - DOCKER_STEPCA_INIT_CA_URL=https://step-ca:9000
      - DOCKER_STEPCA_INIT_SSH=false
      - DOCKER_STEPCA_INIT_REMOTE_MANAGEMENT=false
    volumes:
      - step-ca-data:/home/step
      - ./step-ca/certs:/certs
    ports:
      - "9000:9000"
    healthcheck:
      test: ["CMD", "curl", "-k", "-f", "https://localhost:9000/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    networks:
      - tokensmith-network

  step-ca-cert-copy:
    image: alpine:latest
    depends_on:
      step-ca:
        condition: service_healthy
    volumes:
      - step-ca-data:/home/step:ro
      - ./step-ca/certs:/certs
    command: sh -c "cp /home/step/certs/root_ca.crt /certs/root_ca.crt && echo 'Certificate copied successfully'"

  traefik:
    image: traefik:v3
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./certificates:/certificates
      - ./step-ca/certs:/certs
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      tokensmith-network:
        aliases:
          - auth.openchami.demo
          - tokensmith.openchami.demo
          - api.openchami.demo
    depends_on:
      step-ca-cert-copy:
        condition: service_completed_successfully
    command:
      - sh
      - -c
      - |
        echo 'Waiting for Step-CA certificates...'
        timeout=60
        count=0
        while [ ! -f /certs/root_ca.crt ] && [ $$count -lt $$timeout ]; do
          echo "Certificate not ready, waiting... ($$count/$$timeout)"
          sleep 5
          count=$$((count + 5))
        done
        if [ ! -f /certs/root_ca.crt ]; then
          echo "ERROR: Certificate not found after $$timeout seconds"
          exit 1
        fi
        echo 'Certificate found, setting up Traefik...'
        mkdir -p /usr/local/share/ca-certificates
        cp /certs/root_ca.crt /usr/local/share/ca-certificates/step-ca.crt
        update-ca-certificates
        exec traefik --api.insecure=true \
          --providers.docker=true \
          --providers.docker.exposedbydefault=false \
          --entrypoints.web.address=:80 \
          --entrypoints.websecure.address=:443 \
          --certificatesresolvers.stepca.acme.email=test@openchami.demo \
          --certificatesresolvers.stepca.acme.storage=/certificates/acme.json \
          --certificatesresolvers.stepca.acme.httpchallenge=true \
          --certificatesresolvers.stepca.acme.httpchallenge.entrypoint=web \
          --certificatesresolvers.stepca.acme.caserver=https://step-ca:9000/acme/acme/directory \
          --log.level=INFO

  tokensmith:
    image: ghcr.io/openchami/tokensmith:0.0-amd64
    user: "1000:1000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.tokensmith.rule=Host(`tokensmith.openchami.demo`)"
      - "traefik.http.routers.tokensmith.entrypoints=websecure"
      - "traefik.http.routers.tokensmith.tls.certresolver=stepca"
      - "traefik.http.middlewares.tokensmith-auth.forwardauth.address=https://auth.openchami.demo/api/verify?rd=https://tokensmith.openchami.demo"
      - "traefik.http.middlewares.tokensmith-auth.forwardauth.trustForwardHeader=true"
      - "traefik.http.routers.tokensmith.middlewares=tokensmith-auth"
      - "traefik.http.middlewares.tokensmith-ratelimit.ratelimit.average=100"
      - "traefik.http.middlewares.tokensmith-ratelimit.ratelimit.burst=50"
      - "traefik.http.routers.tokensmith.middlewares=tokensmith-ratelimit"
    ports:
      - "8080:8080"
    environment:
      - TOKENSMITH_ISSUER=https://tokensmith.openchami.demo
      - TOKENSMITH_CONFIG=/tokensmith/config/config.json
      - TOKENSMITH_CLUSTER_ID=my-cluster
      - TOKENSMITH_OPENCHAMI_ID=my-openchami
      - TOKENSMITH_OIDC_PROVIDER=authelia
      - AUTHELIA_URL=https://auth.openchami.demo
      - SSL_CERT_FILE=/certs/root_ca.crt
      - TOKENSMITH_SESSION_SECURE=true
      - TOKENSMITH_SESSION_HTTPONLY=true
      - TOKENSMITH_SESSION_SAMESITE=Strict
    volumes:
      - ./tokensmith/config:/tokensmith/config
      - ./tokensmith/keys:/tokensmith/keys
      - ./step-ca/certs:/certs:ro
    command: sh -c "mkdir -p /tokensmith/keys && chown 1000:1000 /tokensmith/keys && exec tokensmith serve --key-dir /tokensmith/keys"
    networks:
      - tokensmith-network

  authelia:
    image: authelia/authelia:latest
    ports:
      - "9091:9091"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.authelia.rule=Host(`auth.openchami.demo`)"
      - "traefik.http.routers.authelia.entrypoints=websecure"
      - "traefik.http.routers.authelia.tls.certresolver=stepca"
      - "traefik.http.middlewares.authelia-ratelimit.ratelimit.average=100"
      - "traefik.http.middlewares.authelia-ratelimit.ratelimit.burst=50"
      - "traefik.http.routers.authelia.middlewares=authelia-ratelimit"
    environment:
      - SSL_CERT_FILE=/certs/root_ca.crt
    volumes:
      - ./authelia/config:/config
      - ./step-ca/certs:/certs:ro
    networks:
      - tokensmith-network

  httpbin:
    image: kennethreitz/httpbin:latest
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.httpbin.rule=Host(`api.openchami.demo`)"
      - "traefik.http.routers.httpbin.entrypoints=websecure"
      - "traefik.http.routers.httpbin.tls.certresolver=stepca"
      - "traefik.http.middlewares.httpbin-auth.forwardauth.address=https://auth.openchami.demo/api/verify?rd=https://api.openchami.demo"
      - "traefik.http.middlewares.httpbin-auth.forwardauth.trustForwardHeader=true"
      - "traefik.http.routers.httpbin.middlewares=httpbin-auth"
      - "traefik.http.middlewares.httpbin-ratelimit.ratelimit.average=100"
      - "traefik.http.middlewares.httpbin-ratelimit.ratelimit.burst=50"
      - "traefik.http.routers.httpbin.middlewares=httpbin-auth,httpbin-ratelimit"
    networks:
      - tokensmith-network

networks:
  tokensmith-network:
    driver: bridge

volumes:
  step-ca-data:
    name: step-ca-data